if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=sum(diag(tab))/sum(tab)
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(sum(tab)-sum(diag(tab)))/sum(tab)
}
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
plot(FPR,TPR,type=l)
plot(FPR,TPR,type="l")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="blue")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue",xlab="threshold",ylab="Error rate")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",main="ROC curve")
str(lda.pred)
str(lda.pred$posterior)
summary(lda.pred$posterior)
library(pROC)
> auc(default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred)
install.packages("pROC")
library(pROC)
auc(Default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred$class)
str(lad.pred)
str(lda.pred)
str(Default)
roc(lda.class,lda.pred$posterior[,2])
roc(lda.class,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,2])
roc(Default$default,lda.pred$posterior[,1])
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1])
plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction="<")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
library(pROC)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
#plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
?dbinom()
hist(dbinom(62,100,.6))
hist(dbinom(62,100,.6))
dbinom(62,100,.6)
?binom()
?dbinom()
rbinom(100,100,62)
rbinom(100,1,62)
x<-seq(1,100)
dbinom(x,62,.6)
plot(dbinom(x,62,.6))
plot(dbinom(x,100,.6))
dave<-0.7
carloe<-0.6
x<-seq(1,100)
plot(dbinom(x,100,dave))
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
d<-data.frame(z,dbinom(x,size,dave),dbinom(x,size,carole))
d<-data.frame(x,dbinom(x,size,dave),dbinom(x,size,carole))
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_hist()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_histogram()
g
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=d))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity")
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.5))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col="red"))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[22]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1],fill=COL[1]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
library(ggplot2)
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7],fill=COL[7]))
g
?COL()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.5))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.3))
g
?Rmarkdown
?markdown
knit_engines$set()
?cat
library(openintro)
data(COL)
n <- c(10:500, seq(510, 2000, 10), seq(2100, 10000, 100))
se <- sapply(n, function(x) sqrt(2 * 12^2 / x))
left.reject <- -1.96 * se
x <- (left.reject - (-3)) / se
p <- pt(x, 2 * n - 2)
#myPNG('power_curve_neg_3.png', 1000, 500)
plot(n, p,
xlab = "Sample Size Per Group",
ylab = "Power",
xlim = c(20, 5000),
ylim = 0:1,
type = "n",
log = "x",
axes = FALSE)
axis(1)
axis(2)
abline(h = 0:1, lty = 2, col = COL[6,2])
lines(n, p, col = COL[1], lwd = 3)
#dev.off()
700, 200,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
#BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,-3,1.7)
plot(x,y,col = COL[2],lwd=2.5,type="l",xaxp  = c(-9, 9, 6),axes=FALSE)
axis(1, at = seq(-15, 15, 3))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5,xaxp  = c(-9, 9, 6))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
#BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,-3,1.7)
plot(x,y,col = COL[2],lwd=2.5,type="l",xaxp  = c(-9, 9, 6),axes=FALSE)
xshade=seq(-9,-3.3,.1)
yshade=dnorm(xshade,-3,1.7)
polygon(c(-9,xshade,-3.3),c(0,yshade,0),col=COL [16])
axis(1, at = seq(-15, 15, 3))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5,xaxp  = c(-9, 9, 6))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
text(8,.22,"n = 100",cex=2.0)
#BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,-3,1.7)
plot(x,y,col = COL[2],lwd=2.5,type="l",xaxp  = c(-9, 9, 6),axes=FALSE)
axis(1, at = seq(-15, 15, 3))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5,xaxp  = c(-9, 9, 6))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
setwd("H:/Rspace/CC-Statistics/power")
# _____ Null Distribution + Alternative At -3 _____ #
myPNG('power_null_C_0_1_7_with_alt_at_3.png',
700, 200,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
#BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,-3,1.7)
plot(x,y,col = COL[2],lwd=2.5,type="l",xaxp  = c(-9, 9, 6),axes=FALSE)
axis(1, at = seq(-15, 15, 3))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5,xaxp  = c(-9, 9, 6))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
