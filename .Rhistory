qqplot(data)
qqnorm(data)
qqnorm(dnorm(x))
qqnorm(x)
data<-dnorm(x)
plot(x,data)
qqnorm(z)
pnorm(1)
pnorm(1,FALSE)
pnorm(1,true)
pnorm(1,TRUE)
pnorm(0)
pnorm(1)
pnorm(50,160*0.28,sqrt(160*0.28*0.72))
pnorm(0.92)
rm(list=ls())
load(url("http://www.openintro.org/stat/data/kobe.RData"))
head(kobe)
kobe$basket[1:9]
str(kobe)
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
median(kobe_streak)
boxplot(kobe_streak)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sample(outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
table(sim_unfair_coin)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
kobe$basket
sim_basket
sim_basket <- sample(outcomes, size = 133, replace = TRUE,prob=c(0.45,0.55))
kobe$basket
sim_basket
sim_streak <- calc_streak(sim_basket)
barplot(table(sim_streak))
median(sim_streak)
boxplot(sim_streak)
x <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "tmap")
install.packages(x) # warning: this may take a number of minutes
lapply(x, library, character.only = TRUE) # load the required packages
pnorm(.98)
?pnorm
pnorm(.975)
pnorm(0.95)
qnorm(0.975)
qnorm(0.99)
qnorm(0.98)
pnorm(0.995)
qnorm(0.995)
qnorm(0.99)
qnorm(0.95)
0.48+qnorm(0.95)*.05
0.48+c(-1,1)*qnorm(0.95)*.05
qnorm(.975)
134+c(-1,1)*qnorm(0.95)*17/sqrt(35)
pnorm(1.39)
415+c(-1,1)*qnorm(0.975)*220/10
?pnorm
pnorm(-0.6,lower.tail=FALSE)
pnorm(-0.6,lower.tail=TRUE)
qnorm(-0.6)
pnorm(1)
pnorm(2)
pnorm(1.96)
pnorm(1.96,lower.tail=FALSE)
pnorm(1.96,lower.tail=TRUE)
pnorm(-0.6,lower.tail=FALSE)
pnorm(-0.6,lower.tail=TRUE)
pnorm(1.96,lower.tail=FALSE)
pnorm(1.96,lower.tail=TRUE)
calcium=c(-5,-4,-3,-2,1,7,10,11,17,18)
median(calcium)
runif(1,1,10)
int(runif(1,1,10))
?runif
as.integer(runif(1,1,10))
as.integer(runif(1,1,10))
as.integer(runif(1,1,10))
calcium=c(-5,-4,-3,-2,1,7,10,11,17,18)
placebo<-c(-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
median(calcium)
median(placebo)
calcium=c(-5,-4,-3,-2,1,7,10,11,17,18)
placebo<-c(-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
median(calcium)
median(placebo)
ic<-as.integer(runif(1,1,10))
ip<-as.integer(runif(1,1,11))
all<-rbind(calcium+placebo)
pnorm(-0.6,lower.tail=FALSE)
pnorm(-0.6,lower.tail=TRUE)
pnorm(1.96,lower.tail=FALSE)
pnorm(1.96,lower.tail=TRUE)
pnorm(9.51,10,4.65)
?sample
ll<-c(-5,-4,-3,-2,1,7,10,11,17,18,-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
csamp<-sample(all,10,replace=FALSE)
csamp
str(csamp)
max(csamp)
max(all)
all<-c(-5,-4,-3,-2,1,7,10,11,17,18,-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
max(all)
all<-c(-5,-4,-3,-2,1,7,10,11,17,18,-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
csamp<-sample(all,10,replace=FALSE)
csamp
cind<-sample(seq(1,21),10,replace=FALSE)
cind
seq(1,21)
all<-c(-5,-4,-3,-2,1,7,10,11,17,18,-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
cind<-sample(seq(1,21),10,replace=FALSE)
cind<-sort(cind)
cind
all<-c(-5,-4,-3,-2,1,7,10,11,17,18,-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
cind<-sample(length(all),10)
cind<-sort(cind)
cind
csamp<-all[cind]
psamp<-all[-cind]
csamp
psamp
ntrial<-100
meddiff<-[]
ntrial<-100
meddiff<- vector(mode="numeric", length=ntrial)
for (i in 1 to ntrial){
cind<-sample(length(all),10)
cind<-sort(cind)
csamp<-all[cind]
psamp<-all[-cind]
meddiff[i]<-median(csamp)-median(psamp)
}
ntrial<-100
meddiff<- vector(mode="numeric", length=ntrial)
for (i in 1 : ntrial){
cind<-sample(length(all),10)
cind<-sort(cind)
csamp<-all[cind]
psamp<-all[-cind]
meddiff[i]<-median(csamp)-median(psamp)
}
dotchart(meddiff)
calcium=c(-5,-4,-3,-2,1,7,10,11,17,18)
placebo<-c(-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
median(calcium)
median(placebo)
ic<-as.integer(runif(1,1,10))
ip<-as.integer(runif(1,1,11))
all<-c(-5,-4,-3,-2,1,7,10,11,17,18,-11,-5,-3,-3,-1,-1,-1,2,3,5,12)
ntrial<-100
meddiff<- vector(mode="numeric", length=ntrial)
for (i in 1 : ntrial){
cind<-sample(length(all),10)
cind<-sort(cind)
csamp<-all[cind]
psamp<-all[-cind]
meddiff[i]<-median(csamp)-median(psamp)
}
dotchart(meddiff)
hist(meddiff)
dots(meddiff)
stripchart(meddiff,method="stack",at=0)
?stripchart
stripchart(meddiff,method="stack",at=0,pch=1)
stripchart(meddiff,method="stack",at=0,pch=1,col="blue")
stripchart(meddiff,method="stack",at=0,pch=1,col="blue",fill="blue")
stripchart(meddiff,method="stack",at=0,pch=16,col="blue")
stripchart(meddiff,method="stack",at=0,pch=16,col="blue")
ntrial<-1000
pnorm(0.8)
qnorm(0.8)
qnorm(.975)
qnorm(.9)
qnorm(.9985)
qnorm(.995)
nc<-load(url("http://bit.ly/dasi_nc"))
str(nc)
nc<-load(url("http://d396qusza40orc.cloudfront.net/statistics/lab_resources/nc.RData."))
library(OpenIntro)
library(Openintro)
library(openintro)
data("ncbirths")
str(ncbirths)
open.packages("openintro")
install.packages("openintro")
library(openintro)
nc<-data("ncbirths")
str(nc)
ncbirths
data("ncbirths")
str(ncbirths)
str(ncbirths)
summary(ncbirths)
summary(ncbirths$gained)
boxplot(ncbirths$gained)
hist(ncbirths$gained)
nc<-ncbirths
nc<-data("ncbirths")
data("ncbirths")
nc<-ncbirths
gained_clean = na.omit(nc$gained)
n = length(gained_clean)
?rep
hist(boot_means)
boot_means = rep(NA, 100)
for(i in 1:100){
boot_sample = sample(gained_clean, n, replace = TRUE)
boot_means[i] = mean(boot_sample)
}
hist(boot_means)
load(url("http://bit.ly/dasi_nc"))
qnorm(0.8)
pt(1.91,10,lower.tail=FALSE)
pt(3.45,16,lower.tail=TRUE)
pt(-3.45,16,lower.tail=TRUE)
pt(.83,6,lower.tail=FALSE)*2
pt(-.83, df = 6, lower.tail = TRUE) *2
pnorm(-1.657,lower.tail=TRUE)
pnorm(-1.657,lower.tail=TRUE)*2
2.7e7
2.7e7/(400^3)
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
remove.packages("ggplot2)")
install.packages("ggplot2")
library(ggplot2)
install.packages("dplyr")
library(dplyr)
install.packages("lubridate")
library(lubridate)
install.packages("caret")
library(caret)
names(cars)
str(cars)
mean(cars[,2])
summary(cars)
?which
which(cars$dist==85)
cars
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- na.omit( read.csv(filename) )
str(dat)
str(dat)
pnorm(1)-pnorm(-1)
pnorm(2)-pnorm(-2)
pnorm(3)-pnorm(-3)
y<-dat %>% filter(Diet=="chow" & Sex=="M") %>% select(Bodyweight) %>% unlist()
m<=(mean(y)+popsd(y))
y<-dat %>% filter(Diet=="chow" & Sex=="M") %>% select(Bodyweight) %>% unlist()
mean(y<=(mean(y)+popsd(y)))
y<-dat %>% filter(Diet=="chow" & Sex=="M") %>% select(Bodyweight) %>% unlist()
library(dplyr)
y<-dat %>% filter(Diet=="chow" & Sex=="M") %>% select(Bodyweight) %>% unlist()
mean(y<=(mean(y)+popsd(y)))
library(rafa)
library(rafalib)
install.packages("rafalib")
library(dplyr)
library(rafalib)
y<-dat %>% filter(Diet=="chow" & Sex=="M") %>% select(Bodyweight) %>% unlist()
mean(y<=(mean(y)+popsd(y)))
mean(y<=(mean(y)+popsd(y)))-mean(y<=(mean(y)-popsd(y)))
z <- ( y - mean(y) ) / popsd(y)
mean( abs(z) <=1 )
mean( abs(z) <=1 )
mean( abs(z) <=2 )
mean( abs(z) <=3 )
qqnorm(z)
abline(0,1)
mypar(2,2)
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="F" & Diet=="chow") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="M" & Diet=="hf") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
y <- filter(dat, Sex=="F" & Diet=="hf") %>% select(Bodyweight) %>% unlist
z <- ( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
str(y)
?replicate
replicate(10000,sample(y,25))
a<-replicate(10000,sample(y,25))
str(a)
a[,1]
a<-replicate(10000,mean(sample(y,25))
set.seed(1)
a<-replicate(10000,mean(sample(y,25)))
str(a)
set.seed(1)
y<-replicate(10000,mean(sample(y,25)))
hist(y)
mpar(1,1)
z<-( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
set.seed(1)
y<-replicate(10000,mean(sample(y,25)))
hist(y)
mypar(1,1)
z<-( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
set.seed(1)
y<-replicate(10000,mean(sample(y,25)))
hist(y)
mypar(1,2)
z<-( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
set.seed(1)
y<-replicate(10000,mean(sample(y,25)))
mypar(1,2)
hist(y)
z<-( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
set.seed(1)
y<-replicate(10000,mean(sample(y,25)))
mypar(2,2)
hist(y)
z<-( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
set.seed(1)
avgs <- replicate(10000, mean( sample(y, 25)))
mypar(1,2)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
set.seed(1)
z<-replicate(10000,mean(sample(y,25)))
mypar(2,2)
hist(z)
z<-( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
#..or
set.seed(1)
avgs <- replicate(10000, mean( sample(y, 25)))
mypar(2,2)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
set.seed(1)
z<-replicate(10000,mean(sample(y,25)))
mypar(2,2)
hist(z)
z<-( y - mean(y) ) / popsd(y)
qqnorm(z);abline(0,1)
#..or
set.seed(1)
avgs <- replicate(10000, mean( sample(y, 25)))
#mypar(2,2)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
library(downloader)
library(dplyr)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
?shuffle
library(raflab)
library(rafalab)
install.packages("rafalib")
library(rafalab)
library(rafalib)
?shuffle
?shuffle()
(.95)^20
.95*.02
.02*.05
.98*.03
.97*.98
.9506+.0294+.001+.019
.0294/(.0294+.019)
pnorm(.975)
pnorm(1.96)
pnorm(1,sd=2)
qnorm(.8)
pnorm(.84)
19.6/4.16
4.711^2
10/sqrt(23)
2.085144*1.96
5-4.086882
pnorm(.913118,sd=2.085144)
pnorm(.913118)
qnorm(.8)
(19.6/2.16)^2
10/sqrt(83)
1.0976*1.96
pnorm(.85)
?solaR
library("solaR")
?solaR
setwd("C:/Users/Mike/Rspace/CC-Statistics")
sd=12
effect=3
n=500
alpha=.05
power=0.8
se=sqrt(2*sd^2/n)
normTail(-3, 1.071, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,-effect,se)
plot(x,y,col = COL[2],lwd=2.5,type="l",xaxp  = c(-9, 9, 6),axes=FALSE)
xshade=seq(-9,-qnorm(1-alpha/2)*se,.1)
yshade=dnorm(xshade,-effect,se)
polygon(c(-9,xshade,-qnorm(1-alpha/2)*se),c(0,yshade,0),col=COL [16])
axis(1, at = seq(-15, 15, 3))
x=seq(-9,9,.1)
y=dnorm(x,0,se)
lines(x,y,col = COL[1],lwd=2.5,xaxp  = c(-9, 9, 6))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(-qnorm(1-alpha/2)*se * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(-qnorm(1-alpha/2)*se * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
library(openintro)
data(COL)
sd=12
effect=3
n=500
alpha=.05
power=0.8
se=sqrt(2*sd^2/n)
normTail(-3, 1.071, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,-effect,se)
plot(x,y,col = COL[2],lwd=2.5,type="l",xaxp  = c(-9, 9, 6),axes=FALSE)
xshade=seq(-9,-qnorm(1-alpha/2)*se,.1)
yshade=dnorm(xshade,-effect,se)
polygon(c(-9,xshade,-qnorm(1-alpha/2)*se),c(0,yshade,0),col=COL [16])
axis(1, at = seq(-15, 15, 3))
x=seq(-9,9,.1)
y=dnorm(x,0,se)
lines(x,y,col = COL[1],lwd=2.5,xaxp  = c(-9, 9, 6))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(-qnorm(1-alpha/2)*se * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(-qnorm(1-alpha/2)*se * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
sd=12
effect=3
n=50
alpha=.05
power=0.8
se=sqrt(2*sd^2/n)
normTail(-3, 1.071, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,-effect,se)
plot(x,y,col = COL[2],lwd=2.5,type="l",xaxp  = c(-9, 9, 6),axes=FALSE)
xshade=seq(-9,-qnorm(1-alpha/2)*se,.1)
yshade=dnorm(xshade,-effect,se)
polygon(c(-9,xshade,-qnorm(1-alpha/2)*se),c(0,yshade,0),col=COL [16])
axis(1, at = seq(-15, 15, 3))
x=seq(-9,9,.1)
y=dnorm(x,0,se)
lines(x,y,col = COL[1],lwd=2.5,xaxp  = c(-9, 9, 6))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(-qnorm(1-alpha/2)*se * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(-qnorm(1-alpha/2)*se * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
