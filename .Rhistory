1
setwd("H:/Rspace/CC-Statistics")
source('H:/Rspace/CC-Statistics/Power.R')
power(thet=6.5, mu=6, var= 16, n = 64)
thet = seq(3,9, by=0.01)
pow = power(thet, mu0, s.sq, n1)
plot(thet, pow, type="l", ylim=c(0,1), main="My Power Plot")
power = function(theta, mu, var, n, alpha=0.05){
crit.l = qnorm(alpha/2, mu, sqrt(var/ n))    ## Critical Value Based on Null
crit.h = qnorm(1-alpha/2, mu, sqrt(var/ n))  ## Critical Value Based on Null
pr.high = pnorm(crit.h, theta, sd = sqrt(var/ n),lower.tail=FALSE) ## Prob Reject High
pr.low  = pnorm(crit.l, theta, sd = sqrt(var/ n))                  ## Prob Reject Low
pow = pr.low+pr.high
pow
}
power(thet=6.5, mu=6, var= 16, n = 64)
thet = seq(3,9, by=0.01)
pow = power(thet, mu0, s.sq, n1)
plot(thet, pow, type="l", ylim=c(0,1), main="My Power Plot")
shadenorm = function(below=NULL, above=NULL, pcts = c(0.025,0.975), mu=0, sig=1, numpts = 500, color = "gray", dens = 40,
lines=FALSE,between=NULL,outside=NULL){
if(is.null(between)){
bothnull = is.null(below) & is.null(above)
if(bothnull==TRUE){
below = ifelse(is.null(below), qnorm(pcts[1],mu,sig), below)
above = ifelse(is.null(above), qnorm(pcts[2],mu,sig), above)
}
}
if(is.null(outside)==FALSE){
if(is.numeric(outside)==FALSE){if(outside==TRUE){outside=qnorm(pcts,mu,sig)}}
below = min(outside)
above = max(outside)
}
lowlim = mu - 4*sig
uplim  = mu + 4*sig
x.grid = seq(lowlim,uplim, length= numpts)
dens.all = dnorm(x.grid,mean=mu, sd = sig)
if(lines==FALSE){
plot(x.grid, dens.all, type="l", xlab="X", ylab="Density")
}
if(lines==TRUE){
lines(x.grid,dens.all)
}
if(is.null(below)==FALSE){
x.below    = x.grid[x.grid<below]
dens.below = dens.all[x.grid<below]
polygon(c(x.below,rev(x.below)),c(rep(0,length(x.below)),rev(dens.below)),col=color,density=dens)
}
if(is.null(above)==FALSE){
x.above    = x.grid[x.grid>above]
dens.above = dens.all[x.grid>above]
polygon(c(x.above,rev(x.above)),c(rep(0,length(x.above)),rev(dens.above)),col=color,density=dens)
}
if(is.null(between)==FALSE){
if(is.numeric(between)==FALSE){if(between==TRUE){between=qnorm(pcts,mu,sig)}}
from = min(between)
to   = max(between)
x.between    = x.grid[x.grid>from&x.grid<to]
dens.between = dens.all[x.grid>from&x.grid<to]
polygon(c(x.between,rev(x.between)),c(rep(0,length(x.between)),rev(dens.between)),col=color,density=dens)
}
}
mu0   = 6     ## Null-hypothesized value
alpha = 0.05  ## Significance Level
s.sq  = 16    ## Variance from pilot study
n1    = 64    ## Sample Size
alt =  6.5
se = sqrt(s.sq/n1)
## -------------------------- ##
## What is Statistical Power? ##
## -------------------------- ##
cuts = c(1-alpha/2, alpha/2)
crits = qnorm(cuts, mu0, sqrt(s.sq/n1))    ## Critical Values Based on Null
shadenorm(mu=mu0, sig = se, outside=crits) ## My own function
shadenorm(mu = 6.5, sig = se, lines=TRUE, outside=crits, col="blue")
source('H:/Rspace/CC-Statistics/Power.R')
source('H:/Rspace/CC-Statistics/Power.R')
source('H:/Rspace/CC-Statistics/Power.R')
setwd("H:/Rspace/openintro-statistics/ch_inference_for_means/figures/power_null_0_1-7")
source('H:/Rspace/openintro-statistics/ch_inference_for_means/figures/power_null_0_1-7/power_null_0_1-7.R')
normTail(0, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, axes = FALSE,
curveColor = COL[1],
xlim = xlim)
axis(1, at = seq(-15, 15, 3))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(0, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[1,4], lwd = 0.5)
}
# _____ Null Distribution Only _____ #
myPDF('power_null_A_0_1-7.pdf',
7, 1.9,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
7, 1.9,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
dev.off()
7, 1.9,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
myPNG('power_null_A_0_1-7.pdf',
7, 1.9,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
dev.off()
?myPNG
library(openintro)
data(COL)
BuildNull <- function(xlim = c(-10, 10)) {
normTail(0, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, axes = FALSE,
curveColor = COL[1],
xlim = xlim)
axis(1, at = seq(-15, 15, 3))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(0, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[1,4], lwd = 0.5)
}
myPNG('power_null_A_0_1-7.png',
600, 400,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
dev.off()
setwd("H:/Rspace/CC-Statistics")
library(openintro)
data(COL)
BuildNull <- function(xlim = c(-10, 10)) {
normTail(0, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, axes = FALSE,
curveColor = COL[1],
xlim = xlim)
axis(1, at = seq(-15, 15, 3))
mtext(expression(bar(x)[trmt] - bar(x)[ctrl]),
side = 1, line = 1.8)
text(1.2, 0.2, "Null distribution", col = COL[1], pos = 4)
lines(rep(0, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[1,4], lwd = 0.5)
}
# _____ Null Distribution Only _____ #
myPNG('power_null_A_0_1-7.png',
600, 400,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
dev.off()
myPNG('power_null_A_0_1-7.png',
600, 250,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
dev.off()
myPNG('power_null_A_0_1-7.png',
600, 200,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
dev.off()
myPNG('power_null_A_0_1-7.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
dev.off()
myPNG('power_null_B_0_1-7_with_rejection_region.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(c(-6, 0, 0, 6), c(0.07, 0.09, 0.05, 0.07),
c(expression("Reject " * H[0]),
"Do not",
expression("reject " * H[0]),
expression("Reject " * H[0])),
col = COL[4])
dev.off()
myPNG('power_null_C_0_1-7_with_alt_at_3.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull(xlim = c(-8.8, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2])
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull(xlim = c(-8.8, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2])
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
BuildNull(xlim = c(-8.8, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2])
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
?normTail
myPNG('power_null_C_0_1-7_with_alt_at_3.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull(xlim = c(-8.8, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
myPNG('power_null_C_0_1-7_with_alt_at_3.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
library(openintro)
myPDF('power_null_D_0_1-7_with_alt_at_3_and_shaded.pdf',
7, 1.9,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull()
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3])
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
BuildNull()
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3])
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
myPNG('power_null_C_0_1-7_with_alt_at_3.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
par(mfrow=c(2,3), mar=c(3,3,1,1))
normTail(3,2,5)
normTail(3,2,1, xLab='symbol')
normTail(3,2,M=1:2, xLab='symbol', cex.axis=0.8)
normTail(3,2,U=5,axes=FALSE)
normTail(L=-1, U=2, M=c(0,1), axes=3, xAxisIncr=2)
normTail(L=-1, U=2, M=c(0,1), xLab='symbol', cex.axis=0.8, xAxisIncr=2)
par(mfrow=c(1,1)
)
normTail(3,2,5)
normTail(0,2,1000)
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3])
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3])
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col="blue")
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3])
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col="blue")
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3],xlim=c(-9,9))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col="blue")
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3],xlim=c(-9.1,9.1))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col="blue")
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
lines(x,y,col = COL[4],lwd=2.5)
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3],xlim=c(-9.1,9.1))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[4],lwd=2.5)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
lines(x,y,col = COL[0],lwd=2.5)
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3],xlim=c(-9.1,9.1))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[0],lwd=2.5)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3],xlim=c(-9.1,9.1))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
myPNG('power_null_D_0_1-7_with_alt_at_3_and_shaded.pdf',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
#BuildNull()
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3],xlim=c(-9.1,9.1))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
myPNG('power_null_D_0_1-7_with_alt_at_3_and_shaded.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
#BuildNull()
normTail(-3, 1.70, L = -3.332, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],
border = COL[2],
col = COL[2,3],xlim=c(-9.1,9.1))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
myPNG('power_null_C_0_1-7_with_alt_at_3.png',
600, 175,
mar = c(2.8, 0, 0, 0),
mgp = c(0, 0.45, 0))
#BuildNull(xlim = c(-9, 10))
normTail(-3, 1.70, L = -1000, U = 1000,
df = 50, lwd = 2.5, add = TRUE,
curveColor = COL[2],xlim = c(-8.8, 10))
x=seq(-9,9,.1)
y=dnorm(x,0,1.7)
lines(x,y,col = COL[1],lwd=2.5)
lines(rep(-3, 2), c(0, dnorm(0, 0, 1.70)),
col = COL[2,4], lwd = 0.5)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 3)
segments(3.3 * c(-1, 1), rep(0, 2), y1 = rep(0.15, 2),
col = COL[4], lty = 3, lwd = 1.5)
text(rep(-6.5, 2), c(0.21, 0.175),
c("Distribution with",
expression(mu[trmt] - mu[ctrl]*" = -3")),
col = COL[2])
dev.off()
